{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Lastname\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Firstname\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.last_name_doc), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.firstt_name_doc), 1 /* TEXT */), _createCommentVNode(\" Вывод других данных \")]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","items","item","index","key","_toDisplayString","id","last_name_doc","firstt_name_doc","_createCommentVNode"],"sources":["C:\\Users\\aser\\PhpstormProjects\\exercise2\\src\\views\\ClientList.vue"],"sourcesContent":["<template>\r\n  <table class=\"table\">\r\n    <thead>\r\n    <tr>\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">Lastname</th>\r\n      <th scope=\"col\">Firstname</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr v-for=\"(item, index) in items\" :key=\"index\">\r\n      <td>{{ item.id }}</td>\r\n      <td>{{ item.last_name_doc }}</td>\r\n      <td>{{ item.firstt_name_doc }}</td>\r\n      <!-- Вывод других данных -->\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport {onBeforeMount, ref} from 'vue';\r\n\r\n\r\nexport default {\r\n  name: \"ClientList\";\r\n\r\n  data() {\r\n    return {\r\n      items: [] // Инициализация свойства items\r\n    };\r\n  },\r\n  mounted() {\r\n    // Ваш GET-запрос для получения данных\r\n    axios.get(apiUrl)\r\n        .then(response => {\r\n          this.items = response.data; // Назначение данных для свойства items\r\n        })\r\n        .catch(error => {\r\n          console.error('Ошибка получения данных:', error);\r\n        });\r\n  }\r\n}\r\n\r\nconst items = ref ([]);\r\n\r\n\r\nasync function fetchDataFromServer(){\r\n  await fetch(apiUrl.value)\r\n    .then((response) => response.json).then((json)=>{\r\n      items.value = json\r\n    })\r\n}\r\n\r\nonBeforeMount(() => {\r\n  fetchDataFromServer();\r\n})\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAMQ,gB,aALRA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAsB;EAAlBC,KAAK,EAAC;AAAK,GAAC,GAAC,G,aACjBD,mBAAA,CAA6B;EAAzBC,KAAK,EAAC;AAAK,GAAC,UAAQ,G,aACxBD,mBAAA,CAA8B;EAA1BC,KAAK,EAAC;AAAK,GAAC,WAAS,E;;;uBAL7BC,mBAAA,CAgBQ,SAhBRC,UAgBQ,GAfNC,UAMQ,EACRJ,mBAAA,CAOQ,iB,kBANRE,mBAAA,CAKKG,SAAA,QAAAC,WAAA,CALuBC,IAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBR,mBAAA,CAKK;MAL+BS,GAAG,EAAED;IAAK,IAC5CV,mBAAA,CAAsB,YAAAY,gBAAA,CAAfH,IAAI,CAACI,EAAE,kBACdb,mBAAA,CAAiC,YAAAY,gBAAA,CAA1BH,IAAI,CAACK,aAAa,kBACzBd,mBAAA,CAAmC,YAAAY,gBAAA,CAA5BH,IAAI,CAACM,eAAe,kBAC3BC,mBAAA,yBAA4B,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}