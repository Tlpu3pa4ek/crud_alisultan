{"ast":null,"code":"import AddModal from \"@/components/AddModal\";\nimport UpdateModal from \"@/components/UpdateModal\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"ClientList\",\n  components: {\n    AddModal,\n    UpdateModal\n  },\n  data() {\n    return {\n      modal1: null,\n      modal2: null,\n      inputDisabled: false,\n      isOpened: false,\n      choosenClient: {},\n      checkedClient: []\n    };\n  },\n  methods: {\n    addElement() {\n      this.modal1 = \"modal\";\n      this.isOpened = true;\n    },\n    addElement2(clientId, last_name_doc, first_name_doc) {\n      this.modal2 = \"modal\";\n      this.isOpened = true;\n      // this.$router.push({ name: 'UpdateModal', params: { clientId, last_name_doc, first_name_doc} });\n    }\n  },\n\n  computed: {\n    ...mapGetters([\"allClients\"]),\n    isModalOpen() {\n      return this.$store.state.modal.isModalOpen; // Первое вычисляемое свойство\n    }\n  },\n\n  async mounted() {\n    this.$store.dispatch('fetchClients');\n  }\n};","map":{"version":3,"names":["AddModal","UpdateModal","mapGetters","name","components","data","modal1","modal2","inputDisabled","isOpened","choosenClient","checkedClient","methods","addElement","addElement2","clientId","last_name_doc","first_name_doc","computed","isModalOpen","$store","state","modal","mounted","dispatch"],"sources":["C:\\Users\\aser\\PhpstormProjects\\exercise2\\src\\views\\ClientList.vue"],"sourcesContent":["<template>\r\n  <table class=\"table\">\r\n    <thead>\r\n    <tr>\r\n      <th scope=\"col\"></th>\r\n      <th scope=\"col\">Client Id</th>\r\n      <th scope=\"col\">Lastname</th>\r\n      <th scope=\"col\">Firstname</th>\r\n      <th scope=\"col\"><button type=\"button\" class=\"btn btn-success\" :data-bs-toggle=\"modal1\" data-bs-target=\"#addModal\"\r\n                                                      @click=\"addElement\">Добавить</button></th>\r\n      <th scope=\"col\"></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr v-for=\"item in allClients\" :key=\"item.id\">\r\n      <input class=\"form-check-input\" type=\"checkbox\" :value=\"index\" v-model=\"checkedProducts\"\r\n             :disabled=\"inputDisabled\" :id=\"item.id\">\r\n      <th scope=\"col\"></th>\r\n      <td>{{ item.id }}</td>\r\n      <td>{{ item.last_name_doc }}</td>\r\n      <td>{{ item.first_name_doc }}</td>\r\n      <td class=\"btntd\"><button type=\"button\" class=\"btn btn-warning\" :data-bs-toggle=\"modal2\" data-bs-target=\"#exampleModal\"\r\n                  @click=\"addElement2(item.id, item.last_name_doc, item.first_name_doc)\" >Редактировать</button></td>\r\n      <td class=\"btntd\"><button type=\"button\" class=\"btn btn-danger\" @click=\"changedelete\">Удалить</button></td>\r\n      <!-- Вывод других данных -->\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <AddModal/>\r\n  <UpdateModal/>\r\n</template>\r\n\r\n<script>\r\nimport AddModal from \"@/components/AddModal\";\r\nimport UpdateModal from \"@/components/UpdateModal\";\r\nimport {mapGetters} from 'vuex';\r\n\r\n\r\nexport default {\r\n  name: \"ClientList\",\r\n  components: {\r\n    AddModal,\r\n    UpdateModal\r\n  },\r\n  data() {\r\n    return {\r\n      modal1: null,\r\n      modal2: null,\r\n      inputDisabled: false,\r\n      isOpened: false,\r\n      choosenClient: {},\r\n      checkedClient:[],\r\n    }\r\n  },\r\n\r\n  methods: {\r\n\r\n    addElement(){\r\n      this.modal1 = \"modal\"\r\n      this.isOpened = true\r\n    },\r\n    addElement2(clientId, last_name_doc, first_name_doc){\r\n      this.modal2 = \"modal\"\r\n      this.isOpened = true\r\n      // this.$router.push({ name: 'UpdateModal', params: { clientId, last_name_doc, first_name_doc} });\r\n    },\r\n  },\r\n  computed:{\r\n      ...mapGetters([\"allClients\"]),\r\n    isModalOpen() {\r\n      return this.$store.state.modal.isModalOpen; // Первое вычисляемое свойство\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    this.$store.dispatch('fetchClients')\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.btntd{\r\n  width: 150px;\r\n}\r\n</style>"],"mappings":"AAiCA,OAAOA,QAAO,MAAO,uBAAuB;AAC5C,OAAOC,WAAU,MAAO,0BAA0B;AAClD,SAAQC,UAAU,QAAO,MAAM;AAG/B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVJ,QAAQ;IACRC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE,CAAC,CAAC;MACjBC,aAAa,EAAC;IAChB;EACF,CAAC;EAEDC,OAAO,EAAE;IAEPC,UAAUA,CAAA,EAAE;MACV,IAAI,CAACP,MAAK,GAAI,OAAM;MACpB,IAAI,CAACG,QAAO,GAAI,IAAG;IACrB,CAAC;IACDK,WAAWA,CAACC,QAAQ,EAAEC,aAAa,EAAEC,cAAc,EAAC;MAClD,IAAI,CAACV,MAAK,GAAI,OAAM;MACpB,IAAI,CAACE,QAAO,GAAI,IAAG;MACnB;IACF;EACF,CAAC;;EACDS,QAAQ,EAAC;IACL,GAAGhB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC/BiB,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACH,WAAW,EAAE;IAC9C;EACF,CAAC;;EAED,MAAMI,OAAOA,CAAA,EAAG;IACd,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,cAAc;EACrC;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}