{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nexport default {\n  actions: {\n    async fetchClients(ctx) {\n      const res = await fetch('http://127.0.0.1:8000/api/clients/getInfo');\n      const clients = await res.json();\n      ctx.commit('showClients', clients);\n    },\n    openModal({\n      commit\n    }) {\n      commit('openModal', true); // Мутация для открытия модального окна\n    },\n\n    closeModal({\n      commit\n    }) {\n      commit('openModal', false); // Мутация для закрытия модального окна\n    }\n  },\n\n  mutations: {\n    showClients(state, clients) {\n      state.clients = clients;\n    },\n    createClient(state, newClient) {\n      state.client.unshift(newClient);\n    },\n    openModal(state, isOpen) {\n      state.isModalOpen = isOpen;\n    }\n  },\n  state: {\n    clients: [],\n    products: []\n  },\n  getters: {\n    allClients(state) {\n      return state.clients;\n    }\n  }\n};","map":{"version":3,"names":["actions","fetchClients","ctx","res","fetch","clients","json","commit","openModal","closeModal","mutations","showClients","state","createClient","newClient","client","unshift","isOpen","isModalOpen","products","getters","allClients"],"sources":["C:/Users/aser/PhpstormProjects/exercise2/src/store/modules/clients.js"],"sourcesContent":["export default {\r\n    actions:{\r\n        async fetchClients(ctx){\r\n            const res = await fetch('http://127.0.0.1:8000/api/clients/getInfo');\r\n            const clients = await res.json();\r\n            ctx.commit('showClients', clients);\r\n        },\r\n        openModal({ commit }) {\r\n            commit('openModal', true); // Мутация для открытия модального окна\r\n        },\r\n        closeModal({ commit }) {\r\n            commit('openModal', false); // Мутация для закрытия модального окна\r\n        }\r\n    },\r\n    mutations:{\r\n        showClients(state, clients){\r\n            state.clients = clients\r\n        },\r\n        createClient(state, newClient) {\r\n            state.client.unshift(newClient)\r\n        },\r\n        openModal(state, isOpen) {\r\n            state.isModalOpen = isOpen;\r\n        }\r\n    },\r\n    state:{\r\n        clients: [],\r\n        products: [],\r\n    },\r\n    getters:{\r\n        allClients(state){\r\n            return state.clients\r\n        }\r\n    },\r\n}"],"mappings":";AAAA,eAAe;EACXA,OAAO,EAAC;IACJ,MAAMC,YAAYA,CAACC,GAAG,EAAC;MACnB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;MACpE,MAAMC,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAChCJ,GAAG,CAACK,MAAM,CAAC,aAAa,EAAEF,OAAO,CAAC;IACtC,CAAC;IACDG,SAASA,CAAC;MAAED;IAAO,CAAC,EAAE;MAClBA,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;;IACDE,UAAUA,CAAC;MAAEF;IAAO,CAAC,EAAE;MACnBA,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IAChC;EACJ,CAAC;;EACDG,SAAS,EAAC;IACNC,WAAWA,CAACC,KAAK,EAAEP,OAAO,EAAC;MACvBO,KAAK,CAACP,OAAO,GAAGA,OAAO;IAC3B,CAAC;IACDQ,YAAYA,CAACD,KAAK,EAAEE,SAAS,EAAE;MAC3BF,KAAK,CAACG,MAAM,CAACC,OAAO,CAACF,SAAS,CAAC;IACnC,CAAC;IACDN,SAASA,CAACI,KAAK,EAAEK,MAAM,EAAE;MACrBL,KAAK,CAACM,WAAW,GAAGD,MAAM;IAC9B;EACJ,CAAC;EACDL,KAAK,EAAC;IACFP,OAAO,EAAE,EAAE;IACXc,QAAQ,EAAE;EACd,CAAC;EACDC,OAAO,EAAC;IACJC,UAAUA,CAACT,KAAK,EAAC;MACb,OAAOA,KAAK,CAACP,OAAO;IACxB;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}