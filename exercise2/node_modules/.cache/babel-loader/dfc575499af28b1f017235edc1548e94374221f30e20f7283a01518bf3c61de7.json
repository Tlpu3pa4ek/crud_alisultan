{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_InfoProducts = _resolveComponent(\"InfoProducts\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_InfoProducts, {\n    items: $data.posts\n  }, null, 8 /* PROPS */, [\"items\"]), _createElementVNode(\"div\", null, _toDisplayString($props.item), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_InfoProducts","items","$data","posts","_createElementVNode","_toDisplayString","$props","item"],"sources":["C:\\Users\\aser\\PhpstormProjects\\exercise2\\src\\views\\ProductsList.vue"],"sourcesContent":["<template>\r\n\r\n  <InfoProducts :items=\"posts\"/>\r\n  <div>{{item}}</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport InfoProducts from \"@/components/products/InfoProducts\";\r\n\r\nexport default {\r\n  name: \"ProductList\",\r\n  components: {\r\n    InfoProducts,\r\n  },\r\n  props:{\r\n    item: Object\r\n  },\r\n  data(){\r\n    return {\r\n      baseUrl: 'https://dummyjson.com/products',\r\n      posts:[],\r\n    }\r\n  },\r\n  methods: {\r\n  },\r\n  async created() {\r\n    try {\r\n      const {status, data} = await axios.get(this.baseUrl);\r\n      if (status === 200) {\r\n        this.posts = data.products\r\n      }\r\n    } catch (e) {\r\n      console.log(e.response)\r\n    }\r\n  },\r\n  beforeMount() {\r\n  },\r\n  updated() {\r\n  },\r\n  beforeUnmount() {\r\n  },\r\n  computed:{\r\n    postsComputed(){\r\n      let newPosts = []\r\n      return newPosts\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\nbutton{\r\n  margin-left: 2%;\r\n}\r\n</style>"],"mappings":";;;6DAEEA,YAAA,CAA8BC,uBAAA;IAAfC,KAAK,EAAEC,KAAA,CAAAC;EAAK,oCAC3BC,mBAAA,CAAmB,aAAAC,gBAAA,CAAZC,MAAA,CAAAC,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}